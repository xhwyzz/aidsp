{"version":3,"sources":["index.js"],"names":["Option","Select","children","i","push","key","toString","Demo","state","data","user_data","Options","label_data","Options_label","handleSubmit","e","preventDefault","props","form","validateFields","err","values","pid","window","location","pathname","split","length","pdata","project_name","status","create_time","_d","end_time","background","total_demand","total_describe","deadline","documents","labels","users_found","users_manager","users_attend","console","log","fetch","protocol","host","method","headers","body","qs","stringify","normFile","Array","isArray","fileList","params","reqwest","url","then","moment","setState","setFieldsValue","map","station","value","id","name","this","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","onSubmit","Item","label","rules","required","message","placeholder","type","valuePropName","getValueFromEvent","action","listType","offset","htmlType","React","Component","WrappedDemo","Form","create","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31e8b2e0.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport moment from 'moment'; // 时间插件  \r\nimport qs from 'qs'\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Checkbox,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  DatePicker\r\n} from 'antd';\r\nimport reqwest from 'reqwest';\r\n\r\nconst { Option } = Select;\r\nconst props = {\r\n  onChange({ file, fileList }) {\r\n    if (file.status !== 'uploading') {\r\n      console.log(file, fileList);\r\n    }\r\n  },\r\n  defaultFileList: [\r\n    {\r\n      uid: '1',\r\n      name: 'xxx.png',\r\n      status: 'done',\r\n      response: 'Server Error 500', // custom error message to show\r\n      url: 'http://www.baidu.com/xxx.png',\r\n    },\r\n  ],\r\n};\r\nconst children = [];\r\nfor (let i = 10; i < 36; i++) {\r\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\n\r\nfunction handleChange(value) {\r\n  console.log(`selected ${value}`);\r\n}\r\nclass Demo extends React.Component {\r\n  state = {\r\n    data: [],\r\n    user_data: [{'id':'','name':'',}],\r\n    Options:[],\r\n    label_data: [{'id':'','name':'',}],\r\n    Options_label:[],\r\n\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      const pid = window.location.pathname.split(\"/\")[window.location.pathname.split(\"/\").length-2]\r\n\r\n      if (!err) {\r\n        const pdata = {\r\n          \"project_id\": pid,\r\n          \"project_name\": values.project_name,\r\n          \"status\": values.status,\r\n          \"create_time\": values.create_time._d,\r\n          \"end_time\": values.end_time._d,\r\n          \"background\": values.background,\r\n          \"total_demand\": values.total_demand,\r\n          \"total_describe\": values.total_describe,\r\n          \"deadline\": values.deadline._d,\r\n          \"documents\": values.documents,\r\n          \"labels\": values.labels[0],\r\n          \"users_found\":  values.users_found[0],\r\n          \"users_manager\":  values.users_manager[0],\r\n          \"users_attend\":  values.users_attend[0],\r\n        }\r\n        console.log(pdata)\r\n        fetch(window.location.protocol + \"//\"+window.location.host + '/aidsp/api/project/' + pid, {\r\n        // fetch('http://127.0.0.1:8000/aidsp/api/project/1', {\r\n\r\n          method: 'PUT',\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          body: qs.stringify(pdata),\r\n        })\r\n\r\n\r\n      }\r\n    });\r\n  };\r\n\r\n  normFile = e => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };  \r\n\r\n  componentDidMount() {\r\n    this.fetch();\r\n  }\r\n\r\n  fetch = (params = {}) => {\r\n    console.log('params:', params);\r\n    const pid = window.location.pathname.split(\"/\")[window.location.pathname.split(\"/\").length-2]\r\n    reqwest({\r\n      url:window.location.protocol + \"//\"+window.location.host + '/aidsp/api/project/1/?format=json',\r\n      // url:'http://127.0.0.1:8000/aidsp/api/project/1/?format=json',\r\n      method: 'get',\r\n    }).then(data => {\r\n      if(data.create_time){data.create_time = moment(data.create_time, 'YYYY-MM-DD')}\r\n      if(data.end_time){data.end_time = moment(data.end_time, 'YYYY-MM-DD')}\r\n      if(data.deadline){data.deadline = moment(data.deadline, 'YYYY-MM-DD')}\r\n      this.setState({data: data});\r\n      this.props.form.setFieldsValue(this.state.data)\r\n\r\n    });\r\n    reqwest({\r\n      url:window.location.protocol + \"//\"+window.location.host + '/aidsp/api/user/?format=json',\r\n      // url:'http://127.0.0.1:8000/aidsp/api/user/?format=json',\r\n      method: 'get',\r\n    }).then(data => {\r\n      this.setState({user_data: data});\r\n      let Options = data.map(station  => <Option value={station.id}>{station .name}</Option>);\r\n      this.setState({Options: Options});\r\n\r\n      console.log(Options)\r\n    });\r\n    reqwest({\r\n      url:window.location.protocol + \"//\"+window.location.host + '/aidsp/api/label/?format=json',\r\n      // url:'http://127.0.0.1:8000/aidsp/api/label/?format=json',\r\n      method: 'get',\r\n    }).then(data => {\r\n      this.setState({label_data: data});\r\n      let Options_label = data.map(station  => <Option value={station.id}>{station .name}</Option>);\r\n      this.setState({Options_label: Options_label});\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 },\r\n      data: this.state.data,\r\n    };\r\n\r\n    return (\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit }>\r\n        <Form.Item label=\"项目名称\">\r\n          {getFieldDecorator('project_name', {\r\n            rules: [{ required: true, message: '请输入项目名称!' }],\r\n          })(\r\n            <Input placeholder=\"请输入项目名称\" key='sddsd'></Input>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator('status', {\r\n            rules: [{ required: true, message: '请选择状态!' }],\r\n          })(\r\n            <Select placeholder=\"请选择状态\">\r\n              <Option value=\"未开始\">未开始</Option>\r\n              <Option value=\"准备中\">准备中</Option>\r\n              <Option value=\"数据采集\">数据采集</Option>\r\n              <Option value=\"数据标注\">数据标注</Option>\r\n              <Option value=\"暂停\">暂停</Option>\r\n              <Option value=\"完结\">完结</Option>\r\n            </Select>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"创建时间\">\r\n          {getFieldDecorator('create_time', {\r\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],}\r\n          )\r\n          (<DatePicker />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"结束时间\">\r\n          {getFieldDecorator('end_time', {\r\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],}\r\n          )(<DatePicker />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"项目背景\" >\r\n          {getFieldDecorator('background', {\r\n            valuePropName: 'fileList',\r\n            getValueFromEvent: this.normFile,\r\n          })(\r\n            <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n              <Button>\r\n                <Icon type=\"upload\" /> Click to upload\r\n              </Button>\r\n            </Upload>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需求总量\" >\r\n          {getFieldDecorator('total_demand', {\r\n            rules: [{ required: true, message: '请输入需求总量!' }],\r\n          })(\r\n            <InputNumber ></InputNumber>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需求数量描述\" >\r\n          {getFieldDecorator('total_describe', {          })(\r\n            <Input placeholder=\"请输入需求数量描述\"></Input>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"截止时间\">\r\n          {getFieldDecorator('deadline', {\r\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],}\r\n          )(<DatePicker />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"文档\" >\r\n          {getFieldDecorator('documents', {\r\n            valuePropName: 'fileList',\r\n            getValueFromEvent: this.normFile,\r\n          })(\r\n            <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n              <Button>\r\n                <Icon type=\"upload\" /> Click to upload\r\n              </Button>\r\n            </Upload>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"标签\">\r\n          {getFieldDecorator('labels', {\r\n          })(\r\n              <Select placeholder=\"请输入标签\">\r\n                {this.state.Options_label}              \r\n              </Select>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"创建人\">\r\n          {getFieldDecorator('users_found', {\r\n            rules: [{ required: true, message: '请输入创建人!' }],\r\n          })(\r\n              <Select placeholder=\"请输入创建人\">\r\n                {this.state.Options}              \r\n              </Select>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"管理人\">\r\n          {getFieldDecorator('users_manager', {\r\n          })(\r\n              <Select placeholder=\"请输入管理人\">\r\n                {this.state.Options}              \r\n              </Select>, \r\n            )}\r\n        </Form.Item>\r\n        <Form.Item label=\"参与人\">\r\n          {getFieldDecorator('users_attend', {\r\n          })(\r\n              <Select placeholder=\"请输入参与人\">\r\n                {this.state.Options}              \r\n              </Select>,          \r\n            )}\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n\r\n  }\r\n}\r\nconst WrappedDemo = Form.create({ project_name: 'validate_other' })(Demo);\r\n\r\nReactDOM.render(<WrappedDemo />, document.getElementById('container'));\r\n          "],"sourceRoot":""}